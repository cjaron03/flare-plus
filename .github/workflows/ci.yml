name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    # only run on PRs (main push already validated by PR checks)
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: setup python and deps
        uses: ./.github/actions/setup-python-deps
        with:
          python-version: '3.9'
          install-dev: 'true'
      
      - name: lint with flake8
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
      
      - name: check code formatting with black
        run: black --check src/
      
      - name: type check with mypy
        run: mypy src/ --ignore-missing-imports --no-strict-optional --warn-unused-ignores --warn-redundant-casts
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flare_prediction_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    strategy:
      # test all Python versions (uv cache makes this fast)
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: setup python and deps
        uses: ./.github/actions/setup-python-deps
        with:
          python-version: ${{ matrix.python-version }}
          install-dev: 'true'
      
      - name: run tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: flare_prediction_test
          DB_USER: postgres
          DB_PASSWORD: postgres
        # TODO: increase coverage threshold as tests are added (currently 41%)
        run: pytest tests/ -v --cov=src --cov-report=term-missing --cov-fail-under=40
