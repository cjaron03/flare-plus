name: pull request checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: check commit message format
        run: |
          # check that commits follow lowercase convention
          git log origin/main..HEAD --format=%s | while read msg; do
            if echo "$msg" | grep -E '^[A-Z]' > /dev/null; then
              echo "error: commit message should be lowercase: '$msg'"
              exit 1
            fi
          done
      
      - name: check for large files
        run: |
          # prevent accidentally committing large files
          find . -type f -size +5M | grep -v '.git' | while read file; do
            echo "error: large file detected: $file"
            exit 1
          done || true
      
      - name: validate python syntax
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: check for syntax errors
        run: |
          python -m py_compile src/**/*.py tests/**/*.py || exit 1

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
      
      - name: check for known security vulnerabilities
        run: |
          # check dependencies for known vulnerabilities
          pip install -r requirements.txt
          safety check --continue-on-error || echo "security vulnerabilities found, review output"
      
      - name: run bandit security linter
        run: |
          # scan for common security issues - fail on high/medium severity
          bandit -r src/ -ll -f screen

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pylint radon
      
      - name: check code complexity
        run: |
          # check cyclomatic complexity - fail if average grade is F
          radon cc src/ -a -nb --total-average
      
      - name: check maintainability index
        run: |
          # check maintainability - warn on low scores but don't fail
          radon mi src/ -nb -s || true

